package controller;
// Generated 04/10/2017 16:18:01 by Hibernate Tools 4.3.1


import java.util.Date;

import dao.DAOSistema;
import java.util.HashSet;
import org.hibernate.Session;
import org.hibernate.Query;



import java.util.List;
import java.util.Iterator;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 * Chamado generated by hbm2java
 */
public class Chamado  implements java.io.Serializable {


     private Integer chamadoId;
     private Situacao situacao;
     private Usuario usuario;
     private String assunto;
     private Date dataCriacao;
     private Date dataFim;
     private Date tempo;
     private Set respostas = new HashSet(0);

     public String[] getChamado(){
         return new String[]{
           String.valueOf("#"+this.chamadoId),
             this.assunto,
             this.usuario.getPessoa().getNome(),
             String.valueOf(this.dataCriacao),
             this.situacao.getStatus()
         };
     }
    public Chamado() {
    }

	
    public Chamado(Situacao situacao, String assunto, Usuario usuario) {
        this.situacao = situacao;
        this.assunto = assunto;
        this.usuario = usuario;
    }
    public Chamado(Situacao situacao, String assunto, Usuario usuario, Date dataCriacao, Date dataFim, Date tempo) {
       this.situacao = situacao;
       this.assunto = assunto;
       this.usuario = usuario;
       this.dataCriacao = dataCriacao;
       this.dataFim = dataFim;
       this.tempo = tempo;
    }
   
    public Integer getChamadoId() {
        return this.chamadoId;
    }
    
    public void setChamadoId(Integer chamadoId) {
        this.chamadoId = chamadoId;
    }
    public Situacao getSituacao() {
        return this.situacao;
    }
    
    public void setSituacao(Situacao situacao) {
        this.situacao = situacao;
    }
    public String getAssunto() {
        return this.assunto;
    }
    
    public void setAssunto(String assunto) {
        this.assunto = assunto;
    }

    public Date getDataCriacao() {
        return this.dataCriacao;
    }
    
    public void setUsuario(Usuario usuario){
        this.usuario = usuario;
    }
    
    public Usuario getUsuario(){
        return this.usuario;
    }
    
    public void setDataCriacao(Date dataCriacao) {
        this.dataCriacao = dataCriacao;
    }
    
    public Date getDataFim() {
        return this.dataFim;
    }
    
    public void setDataFim(Date dataFim) {
        this.dataFim = dataFim;
    }
    public Date getTempo() {
        return this.tempo;
    }
    
    public void setTempo(Date tempo) {
        this.tempo = tempo;
    }

    public Set getRespostas() {
        return this.respostas;
    }
    
    public void setRespostas(Set respostas) {
        this.respostas = respostas;
    }


    public boolean cadastraChamado(Chamado chamado){
        
        try{
            Session s = DAOSistema.getSessionFactory().openSession();
            s.beginTransaction();
            s.save(chamado);
            s.getTransaction().commit();
            return true;
        }catch(Exception ex){
            ex.printStackTrace();
        }
        return false;
    }
    
    public Iterator retornaChamado(String pesquisa, int filtro){
        String sql = "from Chamado ";
        
        switch(filtro){
            case 0:
                sql += " where chamadoId = '"+pesquisa+"'";
                break;
            case 1:
                sql += " where assunto LIKE '%"+pesquisa+"%'";
                break;
            case 2:
                sql += "SOLICITANTE";
                break;
            case 3:
                sql += " where situacao.status LIKE '%"+pesquisa+"% '";
                break;
        }
        
        try{
            Session s = DAOSistema.getSessionFactory().openSession();
            s.beginTransaction();
            Query q = s.createQuery(sql);
            List l = q.list();
            Iterator i = l.iterator();
            s.getTransaction().commit();
            return i;
        }catch(Exception ex){
            ex.printStackTrace();
        }
        
        return null;
    }

    
    public Chamado retornaChamado(int chamadoId){
        String sql = "from Chamado where chamadoId = '"+chamadoId+"'";
        
        try{
            Session s = DAOSistema.getSessionFactory().openSession();
            s.beginTransaction();
            Query q = s.createQuery(sql);
            List l = q.list();
            Iterator i = l.iterator();
            Chamado c;
            
            if(i.hasNext()){
                c = (Chamado)i.next();
                return c;
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
        return null;
    }
    
    public boolean finalizaChamado(Chamado chamado){
        String sql = "update Chamado set situacao.situacaoId = '8', dataFim = CURRENT_TIMESTAMP where chamadoId = '"+chamado.getChamadoId()+"'";
        try{
            Session s = DAOSistema.getSessionFactory().getCurrentSession();
            s.beginTransaction();
            Query q = s.createQuery(sql);
            q.executeUpdate();
            s.getTransaction().commit();
            return true;
        }catch(Exception ex){
            ex.printStackTrace();
        }
        return false;
    }

    public int totalChamado(Usuario usuario){
        String sql = "from Chamado where usuario.usuarioId = '"+usuario.getUsuarioId()+"'";
        try{
            Session s = DAOSistema.getSessionFactory().openSession();
            s.beginTransaction();
            Query q = s.createQuery(sql);
            List l = q.list();
            return l.size();
        }catch(Exception ex){
            ex.printStackTrace();
        }
        return 0;
    }

}


